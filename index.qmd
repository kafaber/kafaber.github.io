---
title: "Assignment 8"
author: "Kate Faber"
format: html
editor: visual
---

```{r setup, include = FALSE, echo = FALSE}
library(tidyverse)
library(gt)
library(paletteer)
library(plotly)
library(sf)
library(janitor)
library(osmdata)
library(viridis)
library(tidycensus)
library(ggthemes)
library(scales)
library(ggmap)

CENSUS_API_KEY <- Sys.getenv("CENSUS_API_KEY")
census_api_key(CENSUS_API_KEY)
```

```{r data_setup_fig2, include = FALSE}
#set up bounding box
hennepin.box <- getbb("hennepin")
hennepin.outline <- osmdata::getbb("hennepin", format_out = "polygon")[[1]] %>%
  as_tibble() %>%
  rename(longitude = V1, latitude = V2)

#get base map
hennepin.base <- get_map(
  location = hennepin.box, 
  source = "stamen",
  maptype = "terrain",
  crop = TRUE
)
hennepin.base.map <- ggmap(hennepin.base) +
  geom_polygon(data = hennepin.outline, aes(x = longitude, y = latitude), 
               color = "black", linewidth = 0.5, alpha = 0)+
  theme_map()

#Pull last 12 months earnings data. Male data is B20004_007E, female data is B20004_013E 
income <- get_acs(
  geography = "tract", 
  variables = c("B20004_007E", "B20004_013E"),
  state = "MN",
  county = "Hennepin", 
  year = 2020,
  geometry = TRUE, 
  cb = FALSE
)

#Clean up census data and calculate gender pay gap
income_short <- income %>%
  select(GEOID, variable, estimate, geometry) %>%
  pivot_wider(names_from = "variable", values_from = "estimate") %>%
  mutate(
    pay_gap = B20004_007 - B20004_013, 
    label = str_c("Tract GEOID: ", GEOID, "\nGender Pay Gap: ", dollar(pay_gap))
  )

#Create the ggplot
pay_gap_plot_static <- income_short %>%
  ggplot() +
  geom_sf(aes(fill = pay_gap, text = label))+
  scale_fill_viridis_c("Gender Pay Gap", labels = dollar)

pay_gap_plot <- hennepin.base.map +
  geom_sf(data = income_short, inherit.aes = FALSE, aes(fill = pay_gap, text = label), alpha = 0.75)+
  scale_fill_viridis_c("Gender Pay Gap", labels = dollar)
```

```{r plot, echo = FALSE}
ggplotly(pay_gap_plot, tooltip = "text") %>%
  style(hoveron = "fills")
```

Source repository is [here](https://github.com/kafaber/kafaber.github.io/). I only set up the Github Action to run when triggered by `workflow_dispatch` rather than on a schedule. This page was generated by triggering the `workflow_dispatch`, not manually rendering.
